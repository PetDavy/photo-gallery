{"version":3,"sources":["api.js","components/Pagination/Pagination.jsx","components/shaps/PhotoShape.js","storage.js","components/Photo/Photo.jsx","components/GalleryBar/GalleryBar.jsx","components/shaps/PhotoInfoShape.js","components/ModalGallery/ModalGallery.jsx","components/Photos/Photos.jsx","components/PhotosLimit/PhotosLimit.jsx","components/Gallery/Gallery.jsx","components/MyPhoto/MyPhoto.jsx","components/MyPhotos/MyPhotos.jsx","components/Header/Header.jsx","App.jsx","index.js"],"names":["BASE_URL","formatPhotoData","photoData","proportion","width","height","size","Math","round","id","url","getPhotosData","limit","currentPage","a","fetch","respones","json","photosData","photos","map","getMyPhotos","photoIds","Promise","all","then","fetchPhoto","getPhotoInfo","photoInfo","Pagination","changePage","className","type","onClick","disabled","PropTypes","string","isRequired","shape","storePhotos","localStorage","setItem","storeData","page","Photo","photo","pinPhoto","openPhoto","isPined","style","gridRow","src","alt","role","newPinedPhotos","pinedPhotos","filter","GalleryBar","number","currentPhoto","currentIndex","isOpen","toggle","author","index","ClassNames","transform","IMG_WIDTH","length","ModalGallery","photoId","closeModalGallery","setCurrentModalPhotoId","useState","setCurrentPhoto","setCurrentIndex","isBottomBarOpen","setIsBottomBarOpen","loadPhoto","loadedPhoto","findIndex","useEffect","download_url","Photos","currentModalPhotoId","setIsOpen","openModalGallery","includes","PhotosLimit","setLimit","changeLimit","photosAmount","isOnChanging","setIsOnChanging","min","max","value","autoFocus","onChange","event","Number","target","onBlur","focus","Gallery","getItem","getStoredData","setPhotos","isLoading","setIsLoading","photosLimit","setPhotosLimit","setCurrentPage","setAllPhotos","MyPhoto","setMyPhotos","setPinedPhotos","isOnRemove","setIsOnRemove","removePhoto","mewPhotos","pinedPhoto","newPhotosIds","newPhoto","classNames","setTimeout","MyPhotos","myPhotos","Header","pinedPhotosLength","to","App","split","getStoredPhotos","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c574c573.chunk.js","sourcesContent":["const BASE_URL = 'https://picsum.photos';\n\nfunction formatPhotoData(photoData) {\n  const proportion = photoData.width / photoData.height;\n  const size = {\n    width: '400',\n    height: `${Math.round(4 / proportion)}00`,\n  };\n\n  return {\n    id: photoData.id,\n    size,\n    url: `${BASE_URL}/id/${photoData.id}/${size.width}/${size.height}`,\n  };\n}\n\nexport const getPhotosData = async(limit, currentPage) => {\n  // eslint-disable-next-line max-len\n  const respones = await fetch(`${BASE_URL}/v2/list?page=${currentPage}&limit=${limit}`);\n  const photosData = await respones.json();\n\n  const photos = photosData.map(formatPhotoData);\n\n  return photos;\n};\n\nexport const getMyPhotos = (photoIds) => {\n  const fetchPhoto = id => (\n    fetch(`${BASE_URL}/id/${id}/info`)\n      .then(respones => respones.json())\n      .then(formatPhotoData)\n  );\n\n  return Promise.all(photoIds.map(id => fetchPhoto(id)));\n};\n\nexport const getPhotoInfo = async(id) => {\n  const respones = await fetch(`${BASE_URL}/id/${id}/info`);\n  const photoInfo = await respones.json();\n\n  return photoInfo;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n\nexport const Pagination = ({ currentPage, changePage }) => (\n  <div className=\"Pagination\">\n    <button\n      type=\"button\"\n      onClick={() => changePage(currentPage - 1)}\n      className=\"Pagination__btn\"\n      disabled={currentPage === 1}\n    >\n      <i className=\"fas fa-arrow-left\" />\n    </button>\n\n    <button\n      type=\"button\"\n      className=\"Pagination__btn\"\n    >\n      {currentPage}\n    </button>\n\n    <button\n      type=\"button\"\n      onClick={() => changePage(currentPage + 1)}\n      className=\"Pagination__btn\"\n    >\n      <i className=\"fas fa-arrow-right\" />\n    </button>\n\n  </div>\n);\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const PhotoShape = {\n  id: PropTypes.string.isRequired,\n  size: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  url: PropTypes.string.isRequired,\n};\n","export const getStoredData = () => {\n  const limit = localStorage.getItem('limit');\n  const page = localStorage.getItem('page');\n\n  if (!limit || !page) {\n    return {\n      limit: 30,\n      page: 1,\n    };\n  }\n\n  return {\n    limit,\n    page,\n  };\n};\n\nexport const getStoredPhotos = () => {\n  const myPhotos = localStorage.getItem('photos');\n\n  if (!myPhotos) {\n    return [];\n  }\n\n  return myPhotos.split(',');\n};\n\nexport const storePhotos = (photos) => {\n  localStorage.setItem('photos', photos);\n};\n\nexport const getStoredPageNumber = () => {\n  const page = localStorage.getItem('page');\n\n  if (!page) {\n    return 1;\n  }\n\n  return +page;\n};\n\nexport const storeData = (limit, page) => {\n  localStorage.setItem('limit', limit);\n  localStorage.setItem('page', page);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PhotoShape } from '../shaps/PhotoShape';\nimport { storePhotos } from '../../storage';\nimport './Photo.scss';\n\nexport const Photo = ({ photo, pinPhoto, openPhoto, isPined }) => {\n  const handleClick = () => {\n    let newPinedPhotos;\n\n    pinPhoto((pinedPhotos) => {\n      if (isPined) {\n        newPinedPhotos = pinedPhotos.filter(id => id !== photo.id);\n        storePhotos(newPinedPhotos);\n\n        return newPinedPhotos;\n      }\n\n      newPinedPhotos = [...pinedPhotos, photo.id];\n      storePhotos(newPinedPhotos);\n\n      return newPinedPhotos;\n    });\n  };\n\n  return (\n    <div\n      className=\"Photo\"\n      style={{ gridRow: `span ${photo.size.height / 100}` }}\n    >\n      <img\n        width={`${photo.size.width}px`}\n        height={`${photo.size.height}px`}\n        src={photo.url}\n        alt=\"something\"\n        className=\"Photo__img\"\n        onClick={() => openPhoto(photo.id)}\n        role=\"presentation\"\n      />\n\n      <button\n        type=\"button\"\n        className=\"Photo__pin-btn\"\n        onClick={handleClick}\n      >\n        {\n          isPined\n            ? <i className=\"fas fa-heart\" />\n            : <i className=\"far fa-heart\" />\n        }\n      </button>\n    </div>\n  );\n};\n\nPhoto.propTypes = {\n  photo: PropTypes.shape(PhotoShape).isRequired,\n  pinPhoto: PropTypes.func.isRequired,\n  openPhoto: PropTypes.func.isRequired,\n  isPined: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { PhotoShape } from '../shaps/PhotoShape';\nimport { PhotoInfoShape } from '../shaps/PhotoInfoShape';\nimport './GalleryBar.scss';\n\nexport const GalleryBar = (\n  { photos, currentPhoto, currentIndex, isOpen, toggle },\n) => {\n  const IMG_WIDTH = 89;\n\n  return (\n    <div className=\"GalleryBar\">\n      <div className=\"GalleryBar__author\">\n        {currentPhoto.author}\n      </div>\n\n      <div className=\"GalleryBar__list-wrapper\">\n        <ul\n          className=\"GalleryBar__list\"\n        >\n          {\n            photos.map((photo, index) => (\n              <li key={photo.id}>\n                <img\n                  src={photo.url}\n                  alt={photo.id}\n                  className={ClassNames('GalleryBar__small-photo', {\n                    'GalleryBar__small-photo--active': index === currentIndex,\n                  })}\n                  style={{\n                    transform: `translateX(${\n                      (IMG_WIDTH * 3) + currentIndex * -IMG_WIDTH\n                    }px)`,\n                  }}\n                />\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"GalleryBar__toggler\"\n        onClick={() => toggle(!isOpen)}\n      >\n        <i\n          className={ClassNames('fas', {\n            'fa-chevron-up': !isOpen,\n            'fa-chevron-down': isOpen,\n          })}\n        />\n      </button>\n      {photos.length}\n    </div>\n  );\n};\n\nGalleryBar.propTypes = {\n  photos: PropTypes.arrayOf(PropTypes.shape(PhotoShape)).isRequired,\n  currentPhoto: PropTypes.shape(PhotoInfoShape).isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const PhotoInfoShape = {\n  id: PropTypes.string,\n  author: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  url: PropTypes.string,\n  download_url: PropTypes.string,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { getPhotoInfo } from '../../api';\nimport { GalleryBar } from '../GalleryBar/GalleryBar';\nimport './ModalGallery.scss';\n\nexport const ModalGallery = (\n  { photos, photoId, closeModalGallery, setCurrentModalPhotoId },\n) => {\n  const [currentPhoto, setCurrentPhoto] = useState({});\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isBottomBarOpen, setIsBottomBarOpen] = useState(false);\n\n  const loadPhoto = async(id) => {\n    const loadedPhoto = await getPhotoInfo(id);\n\n    setCurrentPhoto(loadedPhoto);\n    setCurrentIndex(photos.findIndex(photo => photo.id === loadedPhoto.id));\n  };\n\n  useEffect(() => {\n    loadPhoto(photoId);\n  }, [photoId]);\n\n  const previousPhoto = () => {\n    if (currentIndex - 1 < 0) {\n      setCurrentModalPhotoId(photos[photos.length - 1].id);\n\n      return;\n    }\n\n    setCurrentModalPhotoId(photos[currentIndex - 1].id);\n  };\n\n  const nextPhoto = () => {\n    if (currentIndex + 1 >= photos.length) {\n      setCurrentModalPhotoId(photos[0].id);\n\n      return;\n    }\n\n    setCurrentModalPhotoId(photos[currentIndex + 1].id);\n  };\n\n  return (\n    <div\n      className={ClassNames('ModalGallery', {\n        'ModalGallery--open-bar': isBottomBarOpen,\n      })}\n    >\n      <div className=\"ModalGallery__count-info\">\n        {`${currentIndex + 1}/${photos.length}`}\n      </div>\n\n      {\n        currentPhoto && (\n          <div className=\"ModalGallery__photo-frame\">\n            <img\n              src={currentPhoto.download_url}\n              alt={currentPhoto.author}\n              style={{ height: '100%' }}\n            />\n          </div>\n        )\n      }\n\n      <button\n        type=\"button\"\n        className=\"ModalGallery__left-btn\"\n        onClick={previousPhoto}\n      >\n        <i className=\"fas fa-chevron-left\" />\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"ModalGallery__right-btn\"\n        onClick={nextPhoto}\n      >\n        <i className=\"fas fa-chevron-right\" />\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"ModalGallery__close-btn\"\n        onClick={closeModalGallery}\n      >\n        <i className=\"fas fa-times\" />\n      </button>\n\n      <GalleryBar\n        photos={photos}\n        currentPhoto={currentPhoto}\n        currentIndex={currentIndex}\n        isOpen={isBottomBarOpen}\n        toggle={setIsBottomBarOpen}\n      />\n    </div>\n  );\n};\n\nModalGallery.propTypes = {\n  photos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    size: PropTypes.shape({\n      width: PropTypes.string,\n      height: PropTypes.string,\n    }),\n    url: PropTypes.string,\n  })).isRequired,\n  photoId: PropTypes.string.isRequired,\n  closeModalGallery: PropTypes.func.isRequired,\n  setCurrentModalPhotoId: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { PhotoShape } from '../shaps/PhotoShape';\nimport { Photo } from '../Photo';\nimport { ModalGallery } from '../ModalGallery/ModalGallery';\nimport './Photos.scss';\n\nexport const Photos = ({ photos, pinedPhotos, pinPhoto }) => {\n  const [currentModalPhotoId, setCurrentModalPhotoId] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModalGallery = (id) => {\n    setCurrentModalPhotoId(id);\n    setIsOpen(true);\n  };\n\n  const closeModalGallery = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"Photos\">\n      {\n        photos.map(photo => (\n          <Photo\n            key={photo.id}\n            photo={photo}\n            pinPhoto={pinPhoto}\n            openPhoto={openModalGallery}\n            isPined={pinedPhotos.includes(photo.id)}\n          />\n        ))\n      }\n\n      {\n        isOpen && (\n          <ModalGallery\n            photos={photos}\n            photoId={currentModalPhotoId}\n            setCurrentModalPhotoId={setCurrentModalPhotoId}\n            closeModalGallery={closeModalGallery}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nPhotos.propTypes = {\n  photos: PropTypes.arrayOf(PropTypes.shape(PhotoShape)).isRequired,\n  pinedPhotos: PropTypes.arrayOf(PropTypes.string).isRequired,\n  pinPhoto: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './PhotosLimit.scss';\n\nexport const PhotosLimit = ({ limit, setLimit, changeLimit, photosAmount }) => {\n  const [isOnChanging, setIsOnChanging] = useState(false);\n\n  const handleChange = (event) => {\n    const value = Number(event.target.value);\n\n    setLimit(value);\n  };\n\n  const handleBlure = (event) => {\n    if (limit > 100) {\n      setLimit(100);\n      event.target.focus();\n\n      return;\n    }\n\n    if (limit < 1) {\n      setLimit(1);\n      event.target.focus();\n\n      return;\n    }\n\n    changeLimit();\n    setIsOnChanging(false);\n  };\n\n  if (!isOnChanging) {\n    return (\n      <div className=\"PhotosLimit__title\">\n        <h3>\n          {`${photosAmount} photos`}\n        </h3>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsOnChanging(true)}\n          className=\"PhotosLimit__pen-btn\"\n        >\n          <i className=\"fas fa-pen\" />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <label className=\"PhotosLimit__label\">\n      <input\n        type=\"number\"\n        min=\"1\"\n        max=\"100\"\n        value={limit}\n        className=\"PhotosLimit__input\"\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        onChange={handleChange}\n        onBlur={handleBlure}\n      />\n      <h3>photos</h3>\n    </label>\n  );\n};\n\nPhotosLimit.propTypes = {\n  limit: PropTypes.number.isRequired,\n  setLimit: PropTypes.func.isRequired,\n  changeLimit: PropTypes.func.isRequired,\n  photosAmount: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPhotosData } from '../../api';\nimport { Pagination } from '../Pagination/Pagination';\nimport { Photos } from '../Photos';\nimport { PhotosLimit } from '../PhotosLimit';\nimport { getStoredData, storeData } from '../../storage';\nimport './Gallery.scss';\n\nexport const Gallery = ({ pinedPhotos, pinPhoto }) => {\n  const { limit, page } = getStoredData();\n\n  const [photos, setPhotos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [photosLimit, setPhotosLimit] = useState(+limit);\n  const [currentPage, setCurrentPage] = useState(+page);\n\n  const changeLimit = () => {\n    setAllPhotos(photosLimit);\n  };\n\n  const setAllPhotos = async() => {\n    const photosData = await getPhotosData(photosLimit, currentPage);\n\n    setPhotos(photosData);\n    setIsLoading(false);\n    storeData(photosLimit, currentPage);\n  };\n\n  useEffect(() => {\n    setAllPhotos();\n  }, [currentPage]);\n\n  return (\n    <div className=\"Gallery\">\n      <h2 className=\"Gallery__title\">\n        Gallery\n      </h2>\n\n      <PhotosLimit\n        changeLimit={changeLimit}\n        limit={photosLimit}\n        setLimit={setPhotosLimit}\n        photosAmount={photos.length}\n      />\n\n      {\n        isLoading && <h2>Loading...</h2>\n      }\n\n      <Photos\n        photos={photos}\n        pinedPhotos={pinedPhotos}\n        pinPhoto={pinPhoto}\n      />\n\n      <Pagination\n        currentPage={currentPage}\n        changePage={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nGallery.propTypes = {\n  pinedPhotos: PropTypes.arrayOf(PropTypes.string).isRequired,\n  pinPhoto: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { PhotoShape } from '../shaps/PhotoShape';\nimport { storePhotos } from '../../storage';\nimport './MyPhoto.scss';\n\nexport const MyPhoto = ({ photo, setMyPhotos, openPhoto, setPinedPhotos }) => {\n  const [isOnRemove, setIsOnRemove] = useState(false);\n\n  const removePhoto = () => {\n    setMyPhotos((pinedPhotos) => {\n      const mewPhotos = pinedPhotos.filter(pinedPhoto => (\n        pinedPhoto.id !== photo.id\n      ));\n\n      const newPhotosIds = mewPhotos.map(newPhoto => newPhoto.id);\n\n      storePhotos(newPhotosIds);\n      setPinedPhotos(newPhotosIds);\n\n      return mewPhotos;\n    });\n  };\n\n  const handleRemove = () => {\n    setIsOnRemove(true);\n    setTimeout(removePhoto, 600);\n  };\n\n  return (\n    <div\n      className={classNames('MyPhoto', {\n        'MyPhoto__on-remove': isOnRemove,\n      })}\n      style={{ gridRow: `span ${photo.size.height / 100}` }}\n    >\n      <img\n        width={`${photo.size.width}px`}\n        height={`${photo.size.height}px`}\n        src={photo.url}\n        alt=\"something\"\n        className=\"MyPhoto__img\"\n        onClick={() => openPhoto(photo.id)}\n        role=\"presentation\"\n      />\n\n      <button\n        type=\"button\"\n        onClick={handleRemove}\n        className=\"MyPhoto__remove-btn\"\n      >\n        remove\n      </button>\n    </div>\n  );\n};\n\nMyPhoto.propTypes = {\n  photo: PropTypes.shape(PhotoShape).isRequired,\n  setMyPhotos: PropTypes.func.isRequired,\n  openPhoto: PropTypes.func.isRequired,\n  setPinedPhotos: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMyPhotos } from '../../api';\nimport { MyPhoto } from '../MyPhoto';\nimport { ModalGallery } from '../ModalGallery/ModalGallery';\nimport './MyPhotos.scss';\n\nexport const MyPhotos = ({ pinedPhotos, setPinedPhotos }) => {\n  const [myPhotos, setMyPhotos] = useState([]);\n  const [currentModalPhotoId, setCurrentModalPhotoId] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModalGallery = (id) => {\n    setCurrentModalPhotoId(id);\n    setIsOpen(true);\n  };\n\n  const closeModalGallery = () => {\n    setIsOpen(false);\n  };\n\n  const setPhotos = async() => {\n    const photos = await getMyPhotos(pinedPhotos);\n\n    setMyPhotos(photos);\n  };\n\n  useEffect(() => {\n    setPhotos(pinedPhotos);\n  }, []);\n\n  if (!myPhotos.length) {\n    return <h1 className=\"MyPhotos__no-photo\">No Photos</h1>;\n  }\n\n  return (\n    <div className=\"MyPhotos\">\n      <h2 className=\"MyPhotos__title\">\n        my favourites\n      </h2>\n\n      <div className=\"MyPhotos__list\">\n        {\n          myPhotos.map(photo => (\n            <MyPhoto\n              key={photo.id}\n              photo={photo}\n              setMyPhotos={setMyPhotos}\n              openPhoto={openModalGallery}\n              setPinedPhotos={setPinedPhotos}\n            />\n          ))\n        }\n      </div>\n\n      {\n        isOpen && (\n          <ModalGallery\n            photos={myPhotos}\n            photoId={currentModalPhotoId}\n            setCurrentModalPhotoId={setCurrentModalPhotoId}\n            closeModalGallery={closeModalGallery}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nMyPhotos.propTypes = {\n  pinedPhotos: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setPinedPhotos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header = ({ pinedPhotosLength }) => (\n  <header className=\"App__header Header\">\n    <div className=\"Header__tools\">\n      <div className=\"Header__like-icon\">\n        <i className=\"far fa-heart\" />\n        <span className=\"Header__counter\">\n          {pinedPhotosLength}\n        </span>\n      </div>\n    </div>\n\n    <nav className=\"Header__nav\">\n      <ul className=\"Header__links\">\n        <li className=\"Header__link\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className=\"Header__link\">\n          <Link to=\"/my-photos\">Favourites</Link>\n        </li>\n      </ul>\n    </nav>\n\n    <div className=\"Header__company\">\n      <span>TemplateMonster</span>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  pinedPhotosLength: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport { Gallery } from './components/Gallery';\nimport { MyPhotos } from './components/MyPhotos';\nimport { getStoredPhotos } from './storage';\nimport { Header } from './components/Header';\n\nexport const App = () => {\n  const [pinedPhotos, setPinedPhotos] = useState(getStoredPhotos());\n\n  return (\n    <div className=\"App\">\n      <Header pinedPhotosLength={pinedPhotos.length} />\n\n      <h1 className=\"App__title\">\n        Lorem Picsum\n      </h1>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Gallery\n            pinedPhotos={pinedPhotos}\n            pinPhoto={setPinedPhotos}\n          />\n        </Route>\n\n        <Route path=\"/my-photos\">\n          <MyPhotos\n            pinedPhotos={pinedPhotos}\n            setPinedPhotos={setPinedPhotos}\n          />\n        </Route>\n      </Switch>\n\n      <footer className=\"App__footer\">\n        Copyright 2020 · All rights reserved\n      </footer>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}